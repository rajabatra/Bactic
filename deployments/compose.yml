version: "3.9"

services:
  db:
    container_name: bactic_db
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    volumes:
      - db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    env_file:
      - "global.env"
      - "db_params.env"

  api:
    container_name: bactic_api
    build:
      context: ../
      dockerfile: build/api/Dockerfile
    restart: always
    ports:
      - "6060:8080"
    depends_on:
      cache:
        condition: service_healthy
      db:
        condition: service_healthy
    links:
      - cache
      - db
    env_file:
      - "global.env"

  scraper:
    container_name: bactic_scraper
    build:
      context: ../
      dockerfile: build/scraper/Dockerfile
    restart: always
    depends_on:
      db:
        condition: service_healthy
    links:
      - db
    env_file:
      - "global.env"

  stats:
    container_name: bactic_stats
    build:
      context: ../
      dockerfile: build/stats/Dockerfile
    restart: always
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_healthy
    links:
      - db
      - cache
    env_file:
      - "global.env"

  cache:
    container_name: bactic_cache
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - cache:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  web:
    container_name: bactic_web
    build:
      context: ../
      dockerfile: build/web/Dockerfile
    restart: always
    depends_on:
      - api
    links:
      - api
    env_file:
      - "global.env"
    ports:
      - "8080:3000"

volumes:
  db:
    driver: local
  cache:
    driver: local
