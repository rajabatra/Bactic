version: "3.9"

services:
  db:
    container_name: db
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    volumes:
      - db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    env_file:
      - "global.env"
      - "db_params.env"

  api:
    container_name: api
    build:
      context: ../
      dockerfile: build/api/Dockerfile
    restart: always
    ports:
      - "6060:8080"
    depends_on:
      cache:
        condition: service_healthy
      db:
        condition: service_healthy
    links:
      - cache
      - db
    env_file:
      - "global.env"
    develop:
      watch:
        - action: rebuild
          path: ../internal/api/
        - action: rebuild
          path: ../cmd/api/

  scraper:
    container_name: scraper
    build:
      context: ../
      dockerfile: build/scraper/Dockerfile
    restart: always
    depends_on:
      db:
        condition: service_healthy
    links:
      - db
    env_file:
      - "global.env"
    develop:
      watch:
        - action: rebuild
          path: ../internal/scrapers
        - action: rebuild
          path: ../cmd/scraper

  cache:
    container_name: cache
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - cache:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  web:
    container_name: web
    build:
      context: ../web
      dockerfile: ../build/web/Dockerfile
      target: dev
    command: ["node", "node_modules/.bin/vite", "dev", "--host"]
    restart: always
    depends_on:
      - api
    links:
      - api
    env_file:
      - "global.env"
    ports:
      - "8080:5173"
    develop:
      watch:
        - action: sync
          path: ../web/
          target: /usr/src/app

volumes:
  db:
    driver: local
  cache:
    driver: local