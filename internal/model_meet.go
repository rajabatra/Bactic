/*
 * Bactic
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package internal

import "time"

type Meet struct {
	Date   time.Time `json:"date"`
	Name   string    `json:"meet_id"`
	Season string    `json:"type"`
	Id     uint32    `json:"id"`
}

// AssertHeatRequired checks if the required fields are not zero-ed
func AssertMeetRequired(obj Meet) error {
	elements := map[string]interface{}{
		"id":      obj.Id,
		"meet_id": obj.Name,
		"season":  obj.Season,
		"date":    obj.Date,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}
	return nil
}

// AssertHeatConstraints checks if the values respects the defined constraints
func AssertMeetConstraints(obj Meet) error {
	return nil
}
