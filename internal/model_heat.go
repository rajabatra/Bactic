/*
 * Bactic
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package internal

type Heat struct {
	Type   *interface{} `json:"type"`
	Id     uint32       `json:"id"`
	MeetId uint32       `json:"meet_id"`
}

// AssertHeatRequired checks if the required fields are not zero-ed
func AssertHeatRequired(obj Heat) error {
	elements := map[string]interface{}{
		"id":      obj.Id,
		"meet_id": obj.MeetId,
		"type":    obj.Type,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertHeatConstraints checks if the values respects the defined constraints
func AssertHeatConstraints(obj Heat) error {
	return nil
}
