/*
 * Bactic
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package api




type School struct {

	Id int32 `json:"id"`

	Name string `json:"name"`

	Division int32 `json:"division,omitempty"`

	Url string `json:"url,omitempty"`

	Leagues []string `json:"leagues,omitempty"`
}

// AssertSchoolRequired checks if the required fields are not zero-ed
func AssertSchoolRequired(obj School) error {
	elements := map[string]interface{}{
		"id": obj.Id,
		"name": obj.Name,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertSchoolConstraints checks if the values respects the defined constraints
func AssertSchoolConstraints(obj School) error {
	return nil
}
