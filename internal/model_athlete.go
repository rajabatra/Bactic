/*
 * Bactic
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package internal

type Athlete struct {
	Name    string   `json:"name"`
	Schools []uint32 `json:"schools,omitempty"`
	Id      uint32   `json:"id"`
}

// AssertAthleteRequired checks if the required fields are not zero-ed
func AssertAthleteRequired(obj Athlete) error {
	elements := map[string]interface{}{
		"name": obj.Name,
		"id":   obj.Id,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertAthleteConstraints checks if the values respects the defined constraints
func AssertAthleteConstraints(obj Athlete) error {
	return nil
}
