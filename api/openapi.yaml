openapi: 3.1.0
info:
  title: Bactic
  version: 0.1.0
servers:
  - url: /api/
    description: the production and testing api server

paths:
  /search/athlete:
    get:
      description: Search for athlete name
      parameters:
        - description: the prefix of the search
          explode: true
          in: query
          name: name
          required: true
          schema:
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/SearchItem"
                type: array
          description:
            a list of the top 10 most similar name matches and their database
            ids
    parameters:
      - description: the prefix of the search
        explode: true
        in: query
        name: name
        required: true
        schema:
          type: string
        style: form
  /stats/athlete/{id}:
    get:
      description: Get athlete summary
      parameters:
        - description: athlete id
          explode: false
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AthleteSummary"
          description:
            "a summary of an athlete's name, team names, summary statistics,\
            \ best times and most recent results"
    parameters:
      - description: athlete id
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
  /stats/team/{id}:
    get:
      description: Get team summary
      parameters:
        - description: team id
          explode: false
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamSummary"
          description:
            "a summary of a team, including athletes that have competed\
            \ for the team, recent performances, and a summary of their statistics"
    parameters:
      - description: team id
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
  /stats/hist:
    get:
      description: Get histogram
      parameters:
        - description: List of events
          explode: true
          in: query
          name: events
          required: false
          schema:
            items:
              $ref: "#/components/schemas/EventType"
            type: array
          style: form
        - description: number of histogram buckets
          explode: true
          in: query
          name: buckets
          required: false
          schema:
            default: 10
            format: float
            type: number
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: float
                  type: number
                type: array
          description: a histogram with buckets entries
    parameters:
      - description: List of events
        explode: true
        in: query
        name: events
        required: false
        schema:
          items:
            $ref: "#/components/schemas/EventType"
          type: array
        style: form
      - description: number of histogram buckets
        explode: true
        in: query
        name: buckets
        required: false
        schema:
          default: 10
          format: float
          type: number
        style: form
  /stats/timeseries:
    get:
      description: Get a time series
      parameters:
        - description: event
          explode: true
          in: query
          name: event
          required: false
          schema:
            format: int64
            type: integer
          style: form
        - description: start date
          explode: true
          in: query
          name: start
          required: true
          schema:
            type: string
          style: form
        - description: end date
          explode: true
          in: query
          name: end
          required: true
          schema:
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        mean:
                          type: number
                          format: float
                        variance:
                          type: number
                          format: float
                  axis:
                    type: array
                    items:
                      type: string
                required:
                  - data
                  - axis
          description: a time series of event history

    parameters:
      - description: event
        explode: true
        in: query
        name: event
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: start date
        explode: true
        in: query
        name: start
        required: true
        schema:
          type: string
        style: form
      - description: end date
        explode: true
        in: query
        name: end
        required: true
        schema:
          type: string
        style: form

components:
  schemas:
    EventType:
      type: string
      nullable: false
      enum:
        - 60m
        - 100m
        - 200m
        - 400m
        - 800m
        - 1500m
        - 1mi
        - 3000m
        - 2mi
        - 5000m
        - 10000m
        - 4x100m
        - 4x400m
        - high_jump
        - vault
        - long_jump
        - triple_jump
        - shot
        - weight_throw
        - discus
        - hammer
        - jav
        - dec
        - hept
        - 100mh
        - xc6k
        - xc8k
        - xc10k

    Result:
      properties:
        id:
          type: integer
          format: int64
        heat_id:
          type: integer
          format: int64
        athlete_id:
          type: integer
          format: int64
        place:
          type: integer
        quantity:
          type: number
          format: float
        wind_ms:
          type: number
          format: float
        stage:
          type: integer
        team:
          type: string
      required:
        - id
        - heat_id
        - athlete_id
        - place
        - quantity

    Heat:
      properties:
        id:
          type: integer
          format: int64
        meet_id:
          type: integer
          format: int64
        type:
          type:
            $ref: "#/components/schemas/EventType"
      required:
        - id
        - type
        - meet_id

    School:
      properties:
        id:
          type: integer
          format: int46
        name:
          type: string
        division:
          type: integer
        url:
          type: string
        leagues:
          type: array
          items:
            type: string
      required:
        - id
        - name

    TeamSummary:
      example:
        name: name
        zscore: 6.0274563
        athletes:
          - name: name
            id: 0
          - name: name
            id: 0
        id: 0
      properties:
        name:
          type: string
        id:
          format: int64
          type: integer
        zscore:
          format: float
          type: number
        athletes:
          items:
            $ref: "#/components/schemas/Athlete"
          type: array
      required:
        - id
        - name

    Athlete:
      example:
        name: name
        id: 0
      properties:
        name:
          type: string
        id:
          format: int64
          type: integer
        schools:
          format: array
          items: string
      required:
        - name
        - id
    AthleteSummary:
      example:
        athlete:
          name: name
          id: 0
        zscore: 6.0274563
      properties:
        athlete:
          $ref: "#/components/schemas/Athlete"
        zscore:
          format: float
          type: number

    Division:
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
      required:
        - name
        - id

    SearchItem:
      properties:
        name: string
        item_type:
          type: string
          enum:
            - athlete
            - school
            - division
        link: string
      required:
        - item_type
        - name
        - link
